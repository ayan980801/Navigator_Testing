
	


Dynamic Customer API

The Dynamic Customer API allows 3rd parties to access various functionalities including quoting, client creation, and accessing various data entities. 


Contents
Authentication / Access	2
Paging	3
Syncing Data	4
Throttling	4
Endpoints	5
POST /customerapi/quote/getquote	5
POST /customerapi/user/search	17
GET /customerapi/client/get	20
POST /customerapi/client/search	26
POST /customerapi/client/create	28
POST /customerapi/case/search	33
Change Log	36



Authentication / Access
An authorization token is required to call the Customer API. Tokens are valid for 24 hours and must be cached. Any external party requesting multiple tokens per day is subject to removal from the API service.

You'll need the following information to get a token for the Customer API:
* Client Id: <Request from your account executive>
* Client Secret: <Request from your account executive>
* Token Url
o Staging: https://techf-dynamic-stg.us.auth0.com/oauth/token
o Production: https://techf-dynamic-prod.us.auth0.com/oauth/token
* Audience
o Staging: https://dynamic-api-stg.techf.com
o Production: https://dynamic-api-prod.techf.com

These are the main service endpoints:
* Staging: https://dynamicapi-staging.techf.com
* Production: https://dynamicapi.techf.com



Paging
Search endpoints can filter data and return multiple pages of information. We enforce a maximum page size for performance reasons. Callers will need to write their own code to loop through the results. Max page size varies per API call and is subject to change. 
 If your API call exceeds the MAX allowed, the API will still return results, but will use the max allowed value.  Therefore it is important to read the totalPages in the response when you are looping through all data, so that even if you are requesting a max higher than allowed, you will still loop through all available pages of data. 
The requests have two common properties using to specify the current page and how many items should be returned per page:
{
    "page": 0,
    "pageSize": 10
}

Search endpoint responses have these common properties:
{
    "totalItems": 100,
    "totalPages": 10,
    "items": [
        ...
    ],
    "page": 0,
    "pageSize": 10,
    "orderByProperty": "UpdatedOn",
    "orderByDescending": true
}
Example code:
const lastUpdated = "2024-01-01";
const pageSize = 10;
let currentPage = 0;
let searchResults;

do {
    searchResults = await SearchCases(currentPage, pageSize, lastUpdated);

    for (const item of searchResults.items) {
        ...
    }

    currentPage++;
} while (currentPage < searchResults.totalPages)
Syncing Data
If your process needs to sync new/changed data from Dynamic to your system, we have a recommended flow that will most efficiently help you sync data on a regular basis by only syncing data that has changed since the last time you performed your sync.
* When you begin the sync process, temporarily save the start date/time 
* Call our API to search for an entity with the max paging size that we allow, and specify the "updatedOnAfterDate" with the value of the LAST time you started this sync process
o Pass null for updatedOnAfterDate if this is the first time running the sync
o To be sure you capture all data changes, it's common to subtract a small amount of time from that start date, ie if you are syncing once per day, subtract 1 hour from the start date, so you will sync the last 24 hours + 1 more hour.
* Call the API to get the first page of data, and then loop/call the API to get the remaining pages of data as needed, and upsert the data into your system
* If the process is successful, permanently store the start date/time of the current process on your system, to be used for the next sync
* If the process fails, then the next time it is executed, it will use the start date/time of the last successful sync, so you are guaranteed to get all changed data.
We recommend running this flow once per day, but you can run it more or less often depending on your needs. If you have a high volume of data (hundreds of changes per day) we recommend syncing once per day.  We do not recommend running this flow more often than once per hour.  
Please be advised that running too often (ie: every few minutes) may result in throttling. It is preferred to run syncing processes during non-operational hours to avoid additional throttling.  See the throttling section for more details.

Throttling
Our API will return HTTP 429 when the rate of API calls exceeds our thresholds.  We allow higher throughput during non-operational hours. Therefore it is advised to run heavy API workloads during non-operational hours as it will be faster and more efficient for both systems.
The calls per minute are calculated on a 5-minute rolling average.  
If you receive a 429 response on any API call, it is advised to treat this as an error and retry the call, but insert a delay in your process before you retry the API call.  The length of the delay can depend on many factors, but a simple solution is to wait 1 second. A better solution is an exponential back-off, ie 1, 2, 4 seconds, etc.
Operating Hours
Max Calls Per Second
Business Hours: 5am to 8pm MT
2 (subject to change)
This is 600 calls per minute, on average
Non-Business Hours: 8pm to 5am  MT
8 (subject to change)
This is 2,400 calls per minute, on average.
Endpoints
POST /customerapi/quote/getquote
Use this endpoint to get a multi-carrier quote.  You can specify a specific health class or you can use our pre-underwriting engine to determine the best health class for each product (using the provided health data).
Headers: 
* Authorization: Bearer <token>
* Content-Type:  application/json
Example Body for Term Quotes:
{
    "amount": 500000,
    "class": "PPNT",
    "term": 10,
    "gender": "M",
    "birthDate": "1985-01-01T06:00:00.000Z",
    "state": "AZ",
    "adbRider": false,
    "wopRider": false,
    "flatExtraAmount": 0,
    "childRider": "ZERO",
    "showFilteredResults": false,
    "productTypeFilter": "Term",
    "mode": "Monthly",
    "includeCashValues": false,
    "preUnderwritingTransmissionModelTerm": {
        "alcoholAbuse": {
            "abuse": false
        },
        "conditions": {
            "add": {
                "hasAdd": false
            },
            "anxiety": {
                "hasAnxiety": false
            },
            "asthma": {
                "hasAsthma": false
            },
            "atrialFibrillation": {
                "hasAtrialFibrillation": false
            },
            "autoImmune": {
                "hasAutoImmuneDisorder": false
            },
            "bipolar": {
                "hasBipolar": false
            },
            "cancer": {
                "hasCancer": false
            },
            "cholesterol": {
                "hasCholesterolIssue": false
            },
            "colitis": {
                "chrons": false
            },
            "depression": {
                "hasDepression": false
            },
            "diabetes": {
                "hasDiabetes": false
            },
            "family": {
                "parents": {
                    "hasFamilyMember": false
                },
                "siblings": {
                    "hasFamilyMember": false
                }
            },
            "gerd": {
                "hasGerd": false
            },
            "heartDisease": {
                "hasHeartDisease": false
            },
            "hyperTension": {
                "hasHyperTension": false
            },
            "ptsd": {
                "hasPtsd": false
            },
            "sleepApnea": {
                "hasSleepApnea": false
            }
        },
        "criminalHistory": false,
        "dob": "1990-12-10",
        "drivingConvition": {
            "dui": false,
            "suspension": false,
            "violations": false
        },
        "drugAbuse": {
            "abuse": false
        },
        "heightFeet": 5,
        "heightInches": 10,
        "marijuanaUse": {
            "marijuana": "Never"
        },
        "requestidentifier": "f76afb4c-2a23-41d7-b0e1-568786f955c5",
        "selfHarm": false,
        "tobaccoUse": {
            "tobacco": "Never"
        },
        "weight": 180
    },
    "includeAdditionalTermRates": [
        10,
        15,
        20,
        25,
        30,
        35,
        40
    ]
}

Example Body for Final Expense Quotes:
{
    "amount": 25000,
    "class": "PPNT",
    "term": null,
    "gender": "M",
    "birthDate": "1955-01-01T06:00:00.000Z",
    "state": "AZ",
    "adbRider": false,
    "wopRider": false,
    "flatExtraAmount": 0,
    "childRider": "ZERO",
    "showFilteredResults": false,
    "productTypeFilter": "FinalExpense",
    "mode": "Monthly",
    "includeCashValues": false
}
Note: "term" must be null when filtering by final expense
Example Response: 
{
    "results": [
        {
            "quoteRequestId": "ceaf99da-31ff-439d-8624-bd4a49dc15d0",
            "quoteRequestResultId": "2ba5a31b-5e24-44e8-bcfb-9af9f9b53a78",
            "productName": "Swift Term",
            "productCode": "symetra-swift-term",
            "carrierCode": "symetra",
            "carrierName": "Symetra",
            "annualPremium": 694.89,
            "monthlyPremium": 59.07,
            "semiAnnualPremium": 354.39,
            "quarterlyPremium": 180.67,
            "rank": 99,
            "childRiderMonthlyPremium": 3.5700,
            "childRiderAnnualPremium": 42.0,
            "adbRiderMonthlyPremium": 20.400000000,
            "adbRiderAnnualPremium": 240.000000,
            "wopRiderMonthlyPremium": 10.455000000,
            "wopRiderAnnualPremium": 123.000000,
            "flatExtraMonthlyPremium": 0,
            "flatExtraAnnualPremium": 0,
            "isInstantIssue": false,
            "isAUEligible": true
        },
        ...
    ],
    "additionalTermRates": [
        {
            "term": 15,
            "modalPremium": 827.88
        },
	 ...
    ],
    "quoteRequestId": "..."
}

Input Fields:
* amount (integer)
o Face amount
* class (enum)
o This is the quoted health class.  Use the following information to understand the full health class codes below.
* PP = Preferred Plus
* P = Preferred
* SP = Standard Plus
* S=Standard
* T = Tobacco
* NT = Non-Tobacco
* TR = Table Rating
* PHC = Personalized Health Class.  This option will use health data to determine the best health class for each quoted product. When using this option, you must also supply the corresponding pre-underwriting data (preUnderwritingTransmissionModelTerm  or preUnderwritingTransmissionModelFE ) with any data points that you have available.
o Possible Values:
* 
* PPNT
* PNT
* SPNT
* 
* SNT
* PT
* ST
* SSTR1NT
* SSTR1T
* SSTR2NT
* SSTR2T
* SSTR3NT
* SSTR3T
* SSTR4NT
* SSTR4T
* SSTR5NT
* SSTR5T
* SSTR6NT
* SSTR6T
* SSTR7NT
* SSTR7T
* SSTR8NT
* SSTR8T
* SSTR9NT
* SSTR9T
* SSTR10NT
* SSTR10T
* SSTR11NT
* SSTR11T
* SSTR12NT
* SSTR12T
* PPT
* SPT
* PHC

* term (integer)
o Term length, 1 through 40.  Common values are 10, 15, 20, 25, 30, 35, 40
o Should be null when filtering by Final Expense
* gender (enum)
o Possible Values:
* M
* F
* birthDate (date time)
* state (enum)
o Valid state code.
o Possible Values:
* 
* AL
* AK
* AR
* AZ
* CA
* CO
* CT
* DC
* DE
* FL
* GA
* HI
* IA
* ID
* IL
* IN
* KS
* KY
* LA
* MA
* MD
* ME
* MI
* MN
* MO
* MS
* MT
* NC
* ND
* NE
* NH
* NJ
* NM
* NV
* NY
* OK
* OH
* OR
* PA
* RI
* SC
* SD
* TN
* TX
* UT
* VA
* VT
* WA
* WI
* WV
* WY
* 
* childRider (enum)
o Child rider units (thousands)
o Possible Values:
* ZERO
* FIVE
* TEN
* adbRider (bool)
o Pass true to quote Accidental Death Benefit.  Products that do not support this rider will not be returned.
* wopRider (bool)
o Pass true to quote Waiver of Premium.  Products that do not support this rider will not be returned.
* mode (string)
o Payment frequency used for quoting
o Possible Values
* Annual
* Quarterly
* Monthly
* Semi-annual
* productTypeFilter (enum)
o Filter by product type
o Possible Values
* FinalExpense
* Term
* includeAdditionalTermRates (number[])
o Optional:  Pass in one or more additional term lengths to get lowest price quote for each of those term lengths.  These quotes are returned in a separate array in the quote response.
* preUnderwritingTransmissionModelTerm (object, required for Term quotes with PHC health class)
o alcoholAbuse (object)
* abuse (bool)
* Indicates if alcohol abuse is present.
* Required for PHC health class.
o conditions (object)
* add (object)
* hasAdd (bool)
o Indicates if Attention Deficient Disorder is present.
o Required for PHC health class.
* anxiety (object)
* hasAnxiety (bool)
o Indicates if anxiety is present.
o Required for PHC health class.
* asthma (object)
* hasAsthma(bool)
o Indicates if asthma is present.
o Required for PHC health class.
* atrialFibrillation (object)
* hasAtrialFibrillation (bool)
o Indicates if atrial fibrillation is present.
o Required for PHC health class.
* autoImmune (object)
* hasAutoImmuneDisorder (bool)
o Indicates if an autoimmune disorder is present.
o Required for PHC health class.
* bipolar (object)
* hasBipolar (bool)
o Indicates if bipolar disorder is present.
o Required for PHC health class.
* cancer (object)
* hasCancer (bool)
o Indicates if cancer is present.
o Required for PHC health class.
* cholesterol (object)
* hasCholesterolIssue (bool)
o Indicates if a cholesterol issue is present.
o Required for PHC health class.
* colitis (object)
* chrons (bool)
o Indicates if Chron's disease or colitis is present.
o Required for PHC health class.
* depression (object)
* hasDepression (bool)
o Indicates if depression is present.
o Required for PHC health class.
* diabetes (object)
* hasDiabetes (bool)
o Indicates if diabetes is present.
o Required for PHC health class.
* family (object)
* parents
o hasFamilyMember (bool)
* Indicates if the proposed insured's biological mother or father have been diagnosed with Heart Disease, Cerebrovascular Disease, Cancer or Diabetes at or before age 70.
* Required for PHC health class.
o siblings (bool)
* Indicates if the proposed insured's biological sibling(s) have been diagnosed with Heart Disease, Cerebrovascular Disease, Cancer or Diabetes at or before age 50.
* Required for PHC health class.
* gerd (object)
* hasGerd (bool)
o Indicates if GERD is present.
o Required for PHC health class.
* heartDisease (object)
* hasHeartDisease (bool)
o Indicates if heart disease is present.
o Required for PHC health class.
* hyperTension (object)
* hasHyperTension (bool)
o Indicates if hypertension is present.
o Required for PHC health class.
* ptsd (object)
* hasPtsd (bool)
o Indicates if PTSD is present.
o Required for PHC health class.
* sleepApnea (object)
* hasSleepApnea (bool)
o Indicates if sleep apnea is present.
o Required for PHC health class.
o criminalHistory (bool)
* Indicates if proposed insured has been convicted of, or are they currently being charged with, a felony, or currently on parole or probation.
* Required for PHC health class.
o dob (string)
* The proposed insured's birth date in the format of YYYY-MM-DD
* Required for PHC health class.
o drivingConviction (object)
* dui (bool)
* Indicates if the proposed insured has been convicted of a DUI.
* Required for PHC health class.
* suspension (bool)
* Indicates if the proposed insured has had their drivers license suspended.
* Required for PHC health class.
* violations (bool)
* Indicates if the proposed insured has had two or more moving violations in the past two years.
* Required for PHC health class.
* drugAbuse (object)
* abuse (bool)
o Indicates if drug abuse is present.
o Required for PHC health class.
* gender (string)
* The gender of the proposed insured.
* Required for PHC health class.
* Possible Values:
o Male
o Female
* heightFeet (int)
* The height in feet of the proposed insured
* Required for PHC health class.
* heightInches (int)
* The inch component of the height of the proposed insured
* Required for PHC health class.
* marijuanaUse (object)
* marijuana (string)
o Indicates marijuana use.
o Required for PHC health class.
o Possible values:
* Never
* Former
* Current
* requestidentifier (guid)
* A unique quote identifier
* Required
* selfHarm (bool)
* Indicates presence of self harm.
* Required for PHC health class.
* tobaccoUse (object)
* tobacco (string)
o Indicates tobacco use.
o Required for PHC health class.
o Possible values:
* Never
* Former
* Current
* weight (int)
* The weight in pounds of the proposed insured
* Required for PHC health class.
* preUnderwritingTransmissionModelFE (object, required for FE quotes with PHC health class)
o alcoholDrugAbuse (object)
* abuse (bool)
* Indicates if alcohol or drug abuse is present.
* Required for PHC health class.
o conditions (object)
* angioplastyOrStent (bool)
* Indicates presence of an angioplasty or stent
* Required for PHC health class.
* autoImmune (object)
* hasAutoImmuneDisorder (bool)
o Indicates if an autoimmune disorder is present.
o Required for PHC health class.
* bipolar (object)
* hasBipolar (bool)
o Indicates if bipolar disorder is present.
o Required for PHC health class.
* cancer (object)
* hasCancer (bool)
o Indicates if cancer is present.
o Required for PHC health class.
* diabetes (object)
* hasDiabetes (bool)
o Indicates if diabetes is present.
o Required for PHC health class.
* hasCare (bool)
* Indicates if the proposed insured is currently hospitalized or receiving skilled nursing care; confined to a nursing facility, bed, or wheelchair due to a chronic illness or disease.
* Required for PHC health class.
* heartAttack (object)
* hasHeartAttack (bool)
o Indicates if the proposed insured has had a heart attack.
o Required for PHC health class.
* schizophrenia (object)
* hasSchizophrenia (bool)
o Indicates if schizophrenia is present.
o Required for PHC health class.
* transientIschemicAttack (object)
* hasTransientIschemicAttack (bool)
o Indicates if the proposed insured has had a Transient Ischemic Attack
o Required for PHC health class.
o conditionsDowngrade (object)
* chronicBronchitis (object)
* hasChronicBronchitis (bool)
o Indicates if chronic bronchitis is present.
o Required for PHC health class.
* copd (object)
* hasCopd (bool)
o Indicates if COPD is present.
o Required for PHC health class.
* emphysemaOrBlackLung (object)
* hasEmphysemaOrBlackLung (bool)
o Indicates if emphysema or black lung is present.
o Required for PHC health class.
* heartDisease (object)
* hasHeartDisease (bool)
o Indicates if heart disease is present.
o Required for PHC health class.
* hepatitis (object)
* hasHepatitis (bool)
o Indicates if hepatitis is present.
o Required for PHC health class.
* kidneyDisease (object)
* hasKidneyDisease (bool)
o Indicates if kidney disease if present.
o Required for PHC health class.
* liverDisease (object)
* hasLiverDisease (bool)
o Indicates if liver disease is present.
o Required for PHC health class.
o criminalHistory (object)
* hasFelony (bool)
* Indicates if the proposed insured has been convicted of a felony.
* Required for PHC health class.
o dob (string)
* The proposed insured's birth date in the format of YYYY-MM-DD
* Required for PHC health class.
o dui (object)
* hasDui (bool)
* Indicates if the proposed insured has been convicted of a DUI.
* Required for PHC health class.
o gender (string)
* The gender of the proposed insured.
* Required for PHC health class.
* Possible Values:
* Male
* Female
o heightFeet (int)
* The height in feet of the proposed insured
* Required for PHC health class.
o heightInches (int)
* The inch component of the height of the proposed insured
* Required for PHC health class.
o requestidentifier (guid)
* A unique quote identifier
* Required
o tobaccoUse (object)
* tobacco (string)
* Indicates tobacco use.
* Required for PHC health class.
* Possible values:
o Never
o Former
o Current
o weight (int)
* The weight in pounds of the proposed insured
* Required for PHC health class.
o 

POST /customerapi/user/search
Use this endpoint to search for users and access their full profile.
Headers: 
* Authorization: Bearer <token>
* Content-Type:  application/json
Example Body:
{
    "page": 1,
    "pageSize": 10,
    "updatedOnAfterDate": "2023-01-01T06:00:00.000Z"
}

Example Response:
{
    "totalItems": 20,
    "totalPages": 10,
    "page": 0,
    "pageSize": 2,
    "items": [
        {
            "userId": "6dc5a3f0-3b41-4b80-97d9-501d049d087c",
            "organizationId": "37f6e250-d630-4237-acaf-42efb7bb7ef3",
            "federatedUserId": null,
            "firstName": "First",
            "lastName": "Last",
            "email": "test@test.com",
            "dateOfBirth": "12/14/2003 12:00:00 AM",
            "address": "123 test Ave",
            "city": "Hometown",
            "state": "ID",
            "zip": "83642",
            "phone": "(212) 555-1212",
            "stateLicenses": [
                {
                    "licenseNumber": "FVPubEMBDKawgOzUHjrvzxVvq",
                    "stateCode": "AL"
                },                {
                    "licenseNumber": "nipuxcbYiYreGMeeDCizpVQWM",
                    "stateCode": "SC"
                }
            ],
            "npn": null,
            "contractedCarriers": [
                {
                    "carrierCode": "american-amicable",
                    "writingNumber": "nbPZDtfZneVWZuRRUjuryapFy"
                },                {
                    "carrierCode": "north-american",
                    "writingNumber": "EaCCXxeBvxfjPzhBhjeKwaZxN"
                }
            ],
            "lastLoginDate": "2023-12-15T18:03:26.5001482Z",
            "updatedOn": "2023-12-15T18:03:31.203566Z",
            "createdOn": "2023-09-05T18:45:44.8539169Z"
        },
        {
            "userId": "8c595b15-c006-460b-80b6-f0d0e015a576",
            "organizationId": "37f6e250-d630-4237-acaf-42efb7bb7ef3",
            "federatedUserId": null,
            "firstName": "test2",
            "lastName": "test2",
            "email": "test2@acme.com",
            "dateOfBirth": "12/14/1998 12:00:00 AM",
            "address": " 123 e st",
            "city": "BIRMINGHAM ",
            "state": "CO",
            "zip": "33333",
            "phone": "(343) 242-3423",
            "stateLicenses": [
                {
                    "licenseNumber": "dfds",
                    "stateCode": "WY"
                },
                {
                    "licenseNumber": "fghf",
                    "stateCode": "IL"
                }
            ],
            "npn": "16755039",
            "contractedCarriers": [
                {
                    "carrierCode": "ameritas",
                    "writingNumber": "AG00000200-77"
                },
                {
                    "carrierCode": "uhl",
                    "writingNumber": "3454"
                },
        ],
            "lastLoginDate": "2023-12-15T18:02:41.1292209Z",
            "updatedOn": "2023-12-15T18:02:44.9106961Z",
            "createdOn": "2023-09-01T20:48:54.5037511Z"
        }
    ]
}


Input Fields:
* page (integer)
o The page of data to return, starting with 0
o Optional, Default = 0
* pageSize (integer)
o The number of items to return in each page, with a maximum of 100
o Optional, Default = 100
* updatedOnAfterDate (date)
o If present, will only return records that have a modified date on/after the specified value
o Optional, default = null


GET /customerapi/client/get
Use this endpoint to access a single client record by ID and get the full client profile.
Headers: 
* Authorization: Bearer <token>
* Content-Type:  application/json
Query Parameters:
* id (guid)
Notes:
* When a client is not found, this will return a 404 response
Example Response:
{
    "clientId": "0bbdbda4-7b7d-4b32-98cf-d6b307e7fc21",
    "organizationId": "37f6e250-d630-4237-acaf-42efb7bb7ef3",
    "firstName": "Test",
    "lastName": "User",
    "dateOfBirth": "12/10/1990",
    "gender": "Male",
    "email": "johndoe@example.com",
    "phoneMobile": "1234567890",
    "address": "123 Main Street",
    "city": "Alexandria",
    "state": "VA",
    "zip": "22314",
    "tobaccoUseage": {
        "tobacco": "Former",
        "lastUse": null,
        "cigarettes": null,
        "cigars": null,
        "chewing": null,
        "vaping": null,
        "eCigarettes": null,
        "gumpatch": null,
        "cigarNumber": null
    },
    "marijuanaUseage": {
        "marijuana": "Former",
        "marijuanaLastUse": null,
        "marijuanaFrequency": null,
        "marijuanaType": {
            "smoked": false,
            "vaping": false,
            "oils": false,
            "ingestedEdibles": false,
            "synthetic": false
        }
    },
    "alcoholAbuse": {
        "abuse": true,
        "when": null,
        "treatment": null,
        "currentOrPast": null,
        "painMedsRx": null
    },
    "drugAbuse": {
        "abuse": true,
        "status": null,
        "lastUse": null,
        "treatment": null,
        "currentOrPast": null,
        "painMedsRx": null
    },
    "drivingConviction": {
        "dui": true,
        "duiMonth": null,
        "suspension": true,
        "suspensionHowLong": null,
        "violations": true,
        "violationsQuantity": null,
        "duiChargedWhen": null
    },
    "healthConditions": {
        "height": {
            "feet": 6,
            "inches": 2
        },
        "weight": null,
        "diabetes": {
            "hasDiabetes": true,
            "diabetesType": null,
            "ageOfDiagnosisType1": null,
            "ageOfDiagnosisType2": null,
            "medication": null,
            "a1c": null,
            "insulinLast2Years": null,
            "insulinBefore50": null,
            "complications": {
                "amputation": null,
                "insulinShock": null,
                "diabeticComa": null,
                "neuropathy": null,
                "retinopathy": null,
                "nephropathy": null
            }
        },
        "sleepApnea": {
            "hasSleepApnea": true,
            "treatment": null
        },
        "depression": {
            "hasDepression": true,
            "howLong": null,
            "medication": null,
            "hospitalFrequency": null
        },
        "bipolar": {
            "hasBipolar": true,
            "diagnosis": null,
            "admitTimes": null,
            "lastHospitalization": null
        },
        "hyperTension": {
            "hasHyperTension": true,
            "lastReadingSystolic": null,
            "lastReadingDiastolic": null,
            "medication": null
        },
        "asthma": {
            "hasAsthma": true,
            "attack": null,
            "symptoms": null,
            "lastHospitalization": null,
            "condition": null
        },
        "anxiety": {
            "hasAnxiety": true,
            "severity": null,
            "medication": null,
            "hospitalFrequency": null,
            "lastHospitalization": null
        },
        "cholesterol": {
            "hasCholesterolIssue": true,
            "reading": null,
            "medication": null
        },
        "ptsd": {
            "hasPtsd": true,
            "hospitalFrequency": null,
            "lastHospitalization": null,
            "governmentBenefits": null,
            "timeOff": null
        },
        "add": {
            "hasAdd": true,
            "hospitalFrequency": null,
            "lastHospitalization": null,
            "medication": null,
            "treatment": null
        },
        "atrialFibrillation": {
            "hasAtrialFibrillation": true,
            "etoh": null,
            "episode": null
        },
        "heartDisease": {
            "hasHeartDisease": true,
            "diagnosis": null,
            "type": []
        },
        "cancer": {
            "hasCancer": true,
            "diagnosis": null,
            "diagnosedMoreThanOnce": null,
            "diagnosedMetastatic": null
        },
        "colitis": {
            "chrons": true,
            "chronsDiagnosis": null,
            "chronsFrequency": null,
            "chronsColon": null
        },
        "autoImmune": {
            "hasAutoImmuneDisorder": true,
            "type": [],
            "functionality": null,
            "diagnosis": null
        },
        "gerd": {
            "hasGerd": true,
            "medication": null
        },
        "familyHealthHistory": {
            "siblings": {
                "hasFamilyMember": true,
                "number": null,
                "heart": null,
                "cerebro": null,
                "cancer": null,
                "diabetes": null
            },
            "parents": {
                "hasFamilyMember": true,
                "number": null,
                "heart": null,
                "cerebro": null,
                "cancer": null,
                "diabetes": null
            }
        },
        "selfHarm": true,
        "schizophrenia": {
            "hasSchizophrenia": null,
            "diagnosis": null
        },
        "transientIschemicAttack": {
            "hasTransientIschemicAttack": null,
            "diagnosis": null
        },
        "angioplastyOrStent": {
            "hasAngioplastyOrStent": null,
            "diagnosis": null
        },
        "heartAttack": {
            "hasHeartAttack": null,
            "diagnosis": null
        },
        "copd": {
            "hasCopd": null,
            "diagnosis": null
        },
        "emphysemaOrBlackLung": {
            "hasEmphysemaOrBlackLung": null,
            "diagnosis": null
        },
        "chronicBronchitis": {
            "hasChronicBronchitis": null,
            "diagnosis": null
        },
        "kidneyDisease": {
            "hasKidneyDisease": null,
            "diagnosis": null
        },
        "liverDisease": {
            "hasLiverDisease": null,
            "diagnosis": null
        },
        "hepatitis": {
            "hasHepatitis": null,
            "diagnosis": null
        },
        "hasCare": null
    },
    "criminalHistory": {
        "hasCriminalHistory": true,
        "hasFelony": null,
        "felonyChargedWhen": null
    },
    "opportunities": [
        {
            "id": "c9dc74b0-a87e-4372-90eb-e1af41169610",
            "externalReferenceCode": "OPP123",
            "quoteRequestId": null,
            "quoteRequestResultId": null,
            "createdOn": "2024-04-05T17:23:09.7492486Z"
        }
    ],
    "createdByUserId": "63044435-0fe9-423a-87c7-226842015531",
    "updatedOn": "2024-04-05T17:23:09.7512813Z",
    "createdOn": "2024-04-05T17:23:09.7338545Z",
}



POST /customerapi/client/search
Use this endpoint to search for clients and access the full client profile.
Headers: 
* Authorization: Bearer <token>
* Content-Type:  application/json
Notes: 
* When no results are found that match the search parameters, an empty list (zero results) will be returned.  You will NOT get a 404 response.
Example Body:
{
    "page": 0,
    "pageSize": 10,
    "updatedOnAfterDate": "2023-01-01T06:00:00.000Z"
}

Example Response:
{
    "totalItems": 100,
    "totalPages": 10,
    "items": [
        {
            "clientId": "a86d2a6d-7d0a-4f92-b013-7b0cd162a9dc",
            "organizationId": "aa6ee583-7e04-408b-a2fa-705950ab57fe",
            "firstName": "First",
            "lastName": "Last",
            "dateOfBirth": "12/12/1956",
            "gender": "Male",
            "email": null,
            "phoneMobile": null,
            "address": null,
            "city": null,
            "state": null,
            "zip": null,
            <<<abbreviated, see client/get example model above for full details>>>
        }
    ],
    "page": 0,
    "pageSize": 10,
    "orderByProperty": "UpdatedOn",
    "orderByDescending": true
}


Input Fields:
* page (integer)
o The page of data to return, starting with 0
o Optional, Default = 0
* pageSize (integer)
o The number of items to return in each page, with a maximum of 100
o Optional, Default = 100
* updatedOnAfterDate (date)
o If present, will only return records that have a modified date on/after the specified value
o Optional, default = null


POST /customerapi/client/create
Use this endpoint to create a new client.  The response will include deep links to access the new client record, and start a quote for this client.
Headers: 
* Authorization: Bearer <token>
* Content-Type:  application/json
Example Body:
{
  "firstName": "John",
  "lastName": "Doe",
  "dateOfBirth": "1990-12-10T00:00:00",
  "assignedToUserId": "63044435-0fe9-423a-87c7-226842015531",
  "gender": "Male",
  "phoneMobile": "1234567890",
  "email": "johndoe@example.com",
  "address": "123 Main Street",
  "city": "Alexandria",
  "state": "VA",
  "zip": "22314",
  "opportunityExternalReferenceCode": "OPP123",
  "clientProfile": {
    "heightTotalInches": 74,
    "weight": 175,
    "tobaccoUse": "Never",
    "marijuanaUse": "Never",
    "alcoholAbuse": false,
    "anxiety": false,
    "asthma": true,
    "bipolar": false,
    "cholesterol": true,
    "depression": false,
    "diabetes": true,
    "drugAbuse": false,
    "hypertension": true,
    "sleepApnea": true,
    "add": false,
    "atrialFibrillation": true,
    "autoImmune": false,
    "cancer": true,
    "colitis": true,
    "gerd": true,
    "heartDisease": true,
    "ptsd": false,
    "selfHarm": false,
    "parentDiagnosed": true,
    "siblingDiagnosed": true,
    "dui": false,
    "drivingViolations": false,
    "drivingSuspension": false,
    "criminalHistory": false
  }
}


Example Response:
{
    "clientID": "906444d3-59c8-4676-8e9b-a6ecd79c5f30",
    "clientDetailsUrl": "https://localhost:3000/client?clientId=906444d3-59c8-4676-8e9b-a6ecd79c5f30&org=org_MloYPbzDoruJWCBH",
    "startQuoteUrl": "https://localhost:3000/quote?clientId=906444d3-59c8-4676-8e9b-a6ecd79c5f30&org=org_MloYPbzDoruJWCBH"
}

Input Fields:
* firstName (string)
o The client's first name
o Required
* lastName (string)
o The client's last name
o Required
* dateOfBirth (date)
o The client's date of birth
o Required
* gender (string)
o The gender of the client
o Required
o Possible values:
* Male
* Female
* assignedToUserId (guid)
o This is the user that the client will be assigned to
o Required
* phoneMobile (string)
o The 10-digit phone number of the client
o Optional, default = null
* email (string)
o The email address of the client
o Optional, default = null
* address (string)
o The address of the client
o Optional, default = null
* city (string)
o The city of the client
o Optional, default = null
* state (string)
o The 2-character state code of the client
o Optional, default = null
* zip (string)
o The 5-digit zip code of the client
o Optional, default = null
* opportunityExternalReferenceCode (string)
o If you supply this value, we will create a new opportunity and attach your custom reference code
o Optional, default = null
* clientProfile
o heightTotalInches (int)
* The height of the client
* Optional, default = null
o weight (int)
* The weight of the client in pounds
* Optional, default = null
o tobaccoUse (string)
* A string that describes the client's tobacco usage
* Optional, default = null
* Possible values:
* Never
* Current
* Former
o marijuanaUse (string)
* A string that describes the client's marijuana usage
* Optional, default = null
* Possible values:
* Never
* Current
* Former
o alcoholAbuse (bool)
* Indicates client's alcohol abuse
* Optional, default = null
o anxiety (bool)
* Indicates client's anxiety
* Optional, default = null
o asthma (bool)
* Indicates client's asthma
* Optional, default = null
o bipolar (bool)
* Indicates client's bipolar disorder
* Optional, default = null
o cholesterol (bool)
* Indicates client's cholesterol condition
* Optional, default = null
o depression (bool)
* Indicates client's depression
* Optional, default = null
o diabetes (bool)
* Indicates client's diabetes
* Optional, default = null
o drugAbuse (bool)
* Indicates client's drug abuse
* Optional, default = null
o hypertension (bool)
* Indicates client's hypertension
* Optional, default = null
o sleepApnea (bool)
* Indicates client's sleep apnea
* Optional, default = null
o add (bool)
* Indicates client's attention deficit disorder (ADD)
* Optional, default = null
o atrialFibrillation (bool)
* Indicates client's atrial fibrillation
* Optional, default = null
o autoImmune (bool)
* Indicates client's autoimmune disorder
* Optional, default = null
o cancer (bool)
* Indicates client's cancer diagnosis
* Optional, default = null
o colitis (bool)
* Indicates client's colitis
* Optional, default = null
o gerd (bool)
* Indicates client's gastroesophageal reflux disease (GERD)
* Optional, default = null
o heartDisease (bool)
* Indicates client's heart disease
* Optional, default = null
o ptsd (bool)
* Indicates client's post-traumatic stress disorder (PTSD)
* Optional, default = null
o selfHarm (bool)
* Indicates client's history of self-harm
* Optional, default = null
o parentDiagnosed (bool)
* Indicates if the client's parent has been diagnosed with a medical condition
* Optional, default = null
o siblingDiagnosed (bool)
* Indicates if the client's sibling has been diagnosed with a medical condition
* Optional, default = null
o dui (bool)
* Indicates client's history of driving under the influence (DUI)
* Optional, default = null
o drivingViolations (bool)
* Indicates client's history of driving violations
* Optional, default = null
o drivingSuspension (bool)
* Indicates if the client's driver's license has been suspended
* Optional, default = null
o criminalHistory (bool)
* Indicates client's history of criminal activities
* Optional, default = null



POST /customerapi/case/search
Use this endpoint to search for all case (pending and completed).
Headers: 
* Authorization: Bearer <token>
* Content-Type:  application/json
Notes: 
* When no results are found that match the search parameters, an empty list (zero results) will be returned.  You will NOT get a 404 response.
Example Body:
{
    "page": 0,
    "pageSize": 10,
    "updatedOnAfterDate": "2023-01-01T06:00:00.000Z"
}

Example Response:
{
    "totalItems": 1,
    "totalPages": 1,
    "items": [
        {
            "caseId": "84e7e65f-20c9-4d3e-8bdf-89c2fe8c8991",
            "clientId": "363f871f-d67d-48c1-ba12-3aad86e44f53",
            "organizationId": "aa6ee583-7e04-408b-a2fa-705950ab57fe",
            "carrierCode": "lga",
            "productCode": "lga-quility-term",
            "caseStatusName": "Carrier Application Pending",
            "caseStatusHistory": [
                {
                    "caseStatus": 0,
                    "caseStatusName": "Application Not Started",
                    "statusDate": "2023-08-22T13:45:12.8171207Z"
                
            ],
            "carrierNativeStatus": "Pending-Pre-Application",
            "carrierNativeStatusDescription": "When application hasn't started and the agent attestation is incomplete.",
            "agentUserId": "99f67f93-cd07-45b2-b56b-bb9b7bb80545",
            "agentFirstName": "Michael",
            "agentLastName": "E.",
            "quoteRequestId": "a27be7a5-004c-4200-9501-5e4a8d1a9cb9",
            "quoteRequestResultId": "992d06f6-4e87-4a3c-be26-727b65d7a6c3",
            "insuredFirstName": "LGA",
            "insuredLastName": "Prem",
            "caseType": 2,
            "caseTypeName": "Drop Ticket",
            "carrierName": "LGA",
            "productName": "Quility Term Plus",
            "policyNumber": "5400052097",
            "appliedFaceAmount": 100000,
            "premiumMode": "M",
            "appliedModalPremium": 42.59,
            "appliedHealthClassCode": 1,
            "appliedHealthClassName": "Preferred Non-Tobacco",
            "createdUserId": "99f67f93-cd07-45b2-b56b-bb9b7bb80545",
            "quotedStateCode": "AL",
            "productType": 0,
            "annualizedPremium": 511.08,
            "updatedOn": "2024-01-30T12:00:12.5356179Z",
            "createdOn": "2023-08-22T13:45:12.817157Z",
            "applicationSubmissionData": {
                "primaryInsured": {
                    "id": "97346b16-873f-4ac5-95bb-b763b78b93df",
                    "firstName": "First",
                    "lastName": "Last",
                },
                "agentSplitList": [
                    {
                        "isPrimaryAgent": true,
                        "carrierAppointmentNumber": "1234567890",
                        "splitPercentage": 100,
                        "isReadOnly": false,
                        "stateLicenseNumber": "216317",
                        "id": "a6d925db-04fa-4570-b215-43b94b418c60",
                        "firstName": "Michael",
                        "lastName": "E.",
                    }
                ],
                "pendingApplications": [],
                "existingInsurance": [],
                "owner": {
                },
                "contingentOwner": {
                },
                "premiumPayer": {
                },
                "newInsurance": {},
                "beneficiaries": [],
                "contingentBeneficiaries": []
            },
            "opportunityId": "323dd2b2-fdb4-4115-b9f7-664e16000000"
        },
    ],
    "page": 0,
    "pageSize": 1,
    "orderByProperty": "UpdatedOn",
    "orderByDescending": true
}




Change Log
Date
Change
2/1/2025
Improved information/guidance on Paging and Syncing section
Added Throttling section
Version 2.1.2025

